name: go build and Pre-release

on:
 workflow_dispatch:
 push:
  branches:
   - main
      
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    #outputs:
      #asset_paths: "boofutils-linux-386,boofutils-linux-amd64,boofutils-linux-arm,boofutils-linux-arm64,boofutils-linux-loong64,boofutils-linux-mips,boofutils-linux-mips64,boofutils-linux-mips64le,boofutils-linux-mipsle,boofutils-linux-ppc64,boofutils-linux-ppc64le,boofutils-linux-riscv64,boofutils-linux-s390x,boofutils-windows-386,boofutils-windows-amd64,boofutils-windows-arm,boofutils-windows-arm64"
    steps:
      - name: Update apt packages
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y libasound2-dev pkg-config make gcc

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.4

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build libnms
        run: make nms

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build windows/amd64
        run: CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -ldflags "-w" -v -o boofutils-windows-amd64.exe .
        continue-on-error: true

      - name: Build linux/amd64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -ldflags "-w" -v -o boofutils-linux-amd64 .
        continue-on-error: true

      - name: Build linux/arm64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -ldflags "-w" -v -o boofutils-linux-arm64 .
        continue-on-error: true

      - name: Upload the artifact
        uses: actions/upload-artifact@v3
        with:
          name: boofutils
          path: |
            boofutils-linux-amd64
            boofutils-linux-arm64
            boofutils-windows-amd64.exe

  upload:
    name: Upload release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Delete old release and tag
        uses: dev-drprasad/delete-tag-and-release@v1.0.1
        with:
          delete_release: true
          tag_name: latest_auto
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get artifacts
        uses: actions/download-artifact@v3
        with:
          path: build

      - name: Release to GitHub
        uses: ncipollo/release-action@v1
        with:
            name: Latest Autobuild
            tag: latest_auto
            commit: main
            body: ${{ github.event.head_commit.message }}
            artifacts: |
              build/*
            prerelease: true
